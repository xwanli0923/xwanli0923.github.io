<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh-CN" /><updated>2023-02-16T08:46:42+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">万里博客</title><subtitle>功不唐捐 </subtitle><author><name>邢万里</name></author><entry><title type="html">使用Kickstart自动化部署Linux操作系统</title><link href="http://localhost:4000/2023/02/13/Install-Linux-Using-Kickstart.html" rel="alternate" type="text/html" title="使用Kickstart自动化部署Linux操作系统" /><published>2023-02-13T00:00:00+08:00</published><updated>2023-02-13T00:00:00+08:00</updated><id>http://localhost:4000/2023/02/13/Install-Linux-Using-Kickstart</id><content type="html" xml:base="http://localhost:4000/2023/02/13/Install-Linux-Using-Kickstart.html"><![CDATA[<p><img src="/assets/images/2023-02-13/800px-DSC_3217.JPG" alt="Fedoraject-Anaconda-installer" /></p>

<p><em>[图片来源：<a href="https://fedoraproject.org/wiki/File:DSC_3217.JPG">Fedora Wiki</a> ]</em></p>

<p><em>作者: 邢万里</em></p>

<h1 id="文档说明">文档说明</h1>

<p>本文介绍了如何使用 <strong>Kickstart</strong> 实现自动化部署 <strong>Linux</strong> 操作系统</p>

<ul>
  <li>系统版本: AlmaLinux 9.1</li>
  <li>主机名: hub.xwanli0923.github.io</li>
</ul>

<h1 id="准备阶段">准备阶段</h1>

<h3 id="1-部署http服务器">1. 部署HTTP服务器</h3>

<ul>
  <li>
    <p>在已经完成安装的 <strong>AlmaLinux</strong> 中，先配置一个本地 YUM 仓库，便于安装 <code class="language-plaintext highlighter-rouge">httpd</code> 软件包</p>
  </li>
  <li>
    <p>先将系统光盘挂载到 <code class="language-plaintext highlighter-rouge">/mnt</code>目录下</p>
  </li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span>lsblk 
NAME                   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                      8:0    0   50G  0 disk 
├─sda1                   8:1    0  600M  0 part /boot/efi
├─sda2                   8:2    0    1G  0 part /boot
└─sda3                   8:3    0 48.4G  0 part 
  └─cloudshelledu-root 253:0    0   47G  0 lvm  /
sr0                     11:0    1    8G  0 rom  
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>mount /dev/sr0 /mnt
mount: /mnt: WARNING: <span class="nb">source </span>write-protected, mounted read-only.
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">df</span> <span class="nt">-Th</span> /mnt
Filesystem     Type     Size  Used Avail Use% Mounted on
/dev/sr0       iso9660  8.1G  8.1G     0 100% /mnt
</code></pre></div></div>

<ul>
  <li>编写 YUM 仓库文件</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-i</span>

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo ls</span> /mnt
AppStream  BaseOS  EFI	images	isolinux  LICENSE  media.repo  TRANS.TBL

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-i</span>

<span class="o">[</span>root@hub.xwanli0923.github.io ~]# <span class="nb">cat</span> <span class="o">&gt;</span> /etc/yum.repos.d/almalinux_dvd.repo <span class="o">&lt;&lt;-</span><span class="no">EOF</span><span class="sh">
&gt; [almalinux-9.1-for-x86_64-BaseOS-rpms]
&gt; name = AlmaLinux DVD BaseOS Local Repository
&gt; enabled = true
&gt; baseurl = file:///mnt/BaseOS
&gt; gpgcheck = false
&gt; 
&gt; [almalinux-9.1-for-x86_64-AppStream-rpms]
&gt; name = AlmaLinux DVD AppStream Local Repository
&gt; enabled = true
&gt; baseurl = file:///mnt/AppStream
&gt; gpgcheck = false
&gt; EOF

[root@hub.xwanli0923.github.io ~]# exit
</span></code></pre></div></div>

<ul>
  <li>禁用默认的软件仓库(可选)</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf repolist
repo <span class="nb">id                                                                 </span>repo name
almalinux-9.1-for-x86_64-AppStream-rpms                                 AlmaLinux DVD AppStream Local Repository
almalinux-9.1-for-x86_64-BaseOS-rpms                                    AlmaLinux DVD BaseOS Local Repository
appstream                                                               AlmaLinux 9 - AppStream
baseos                                                                  AlmaLinux 9 - BaseOS
extras                                                                  AlmaLinux 9 - Extras

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf config-manager <span class="nt">--disable</span> appstream
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf config-manager <span class="nt">--disable</span> baseos
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf config-manager <span class="nt">--disable</span> extras
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf repolist
repo <span class="nb">id                                                                 </span>repo name
almalinux-9.1-for-x86_64-AppStream-rpms                                 AlmaLinux DVD AppStream Local Repository
almalinux-9.1-for-x86_64-BaseOS-rpms                                    AlmaLinux DVD BaseOS Local Repository

</code></pre></div></div>

<ul>
  <li>关闭 <code class="language-plaintext highlighter-rouge">SELinux</code></li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo sed</span> <span class="nt">-i</span> <span class="s1">'s/SELINUX=enforcing/SELINUX=permissive/g'</span> /etc/selinux/config 

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>setenforce permissive
</code></pre></div></div>

<h3 id="2-配置基于http的yum仓库">2. 配置基于HTTP的YUM仓库</h3>

<ul>
  <li>
    <p>安装并配置 <code class="language-plaintext highlighter-rouge">httpd</code> 服务，用于安装期间所需的软件包提供YUM仓库</p>
  </li>
  <li>
    <p>安装 <code class="language-plaintext highlighter-rouge">httpd</code> 服务</p>
  </li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf <span class="nb">install </span>httpd <span class="nt">-y</span>
</code></pre></div></div>

<ul>
  <li>创建内容目录</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo mkdir</span> <span class="nt">-p</span> /content/almalinux/<span class="o">{</span>dvd,ks<span class="o">}</span>
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo ln</span> <span class="nt">-s</span> /content /var/www/html/
</code></pre></div></div>

<ul>
  <li>允许防火墙通过 <code class="language-plaintext highlighter-rouge">http</code> 流量</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--add-service</span><span class="o">=</span>http 
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--runtime-to-permanent</span>
</code></pre></div></div>

<ul>
  <li>运行<code class="language-plaintext highlighter-rouge">httpd</code>服务并允许开机自动运行</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>httpd <span class="nt">--now</span>
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span>ss <span class="nt">-tplna</span> | <span class="nb">grep</span> :80
LISTEN 0      511                 <span class="k">*</span>:80              <span class="k">*</span>:<span class="k">*</span>  
</code></pre></div></div>

<ul>
  <li>客户端测试</li>
</ul>

<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-13_16-06-49.png" alt="" /></p>

<ul>
  <li>将光盘文件中的内容复制到<code class="language-plaintext highlighter-rouge">/content/almalinux/dvd</code>中</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>rsync <span class="nt">-rP</span> /mnt/<span class="k">*</span>   /content/almalinux/dvd/
</code></pre></div></div>

<ul>
  <li>修改本地的YUM仓库配置文件</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo sed</span> <span class="nt">-i</span> <span class="s1">'s/mnt/content\/almalinux\/dvd/g'</span> /etc/yum.repos.d/almalinux_dvd.repo 
</code></pre></div></div>

<h3 id="3-部署-dhcp-服务器">3. 部署 DHCP 服务器</h3>

<ul>
  <li>安装 <code class="language-plaintext highlighter-rouge">dhcp</code> 软件包</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf <span class="nb">install </span>dhcp-server <span class="nt">-y</span>
</code></pre></div></div>

<ul>
  <li>配置 <code class="language-plaintext highlighter-rouge">dhcpd</code> 服务</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span>rpm <span class="nt">-ql</span> dhcp-server | <span class="nb">grep </span>example
/usr/share/doc/dhcp-server/dhcpd.conf.example
/usr/share/doc/dhcp-server/dhcpd6.conf.example

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo cp</span> /usr/share/doc/dhcp-server/dhcpd.conf.example  /etc/dhcp/dhcpd.conf
</code></pre></div></div>

<ul>
  <li>编辑 <code class="language-plaintext highlighter-rouge">dhcpd.conf</code> 文件</li>
</ul>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">option</span> <span class="err">space</span> <span class="err">pxelinux</span><span class="c">;
</span><span class="err">option</span> <span class="err">pxelinux.magic</span> <span class="err">code</span> <span class="py">208</span> <span class="p">=</span> <span class="s">string;</span>
<span class="err">option</span> <span class="err">pxelinux.configfile</span> <span class="err">code</span> <span class="py">209</span> <span class="p">=</span> <span class="s">text;</span>
<span class="err">option</span> <span class="err">pxelinux.pathprefix</span> <span class="err">code</span> <span class="py">210</span> <span class="p">=</span> <span class="s">text;</span>
<span class="err">option</span> <span class="err">pxelinux.reboottime</span> <span class="err">code</span> <span class="py">211</span> <span class="p">=</span> <span class="s">unsigned integer 32;</span>
<span class="err">option</span> <span class="err">architecture-type</span> <span class="err">code</span> <span class="py">93</span> <span class="p">=</span> <span class="s">unsigned integer 16;</span>

<span class="err">subnet</span> <span class="err">172.16.100.0</span> <span class="err">netmask</span> <span class="err">255.255.255.0</span> <span class="err">{</span>

        <span class="err">class</span> <span class="err">"virtual"</span> <span class="err">{</span>
                <span class="err">match</span> <span class="err">if</span> <span class="err">substring</span> <span class="err">(hardware,</span> <span class="err">1,</span> <span class="err">3)</span> <span class="err">=</span> <span class="err">52:54:00</span> <span class="err">or</span>
                     <span class="err">substring</span> <span class="err">(hardware,</span> <span class="err">1,</span> <span class="err">3)</span> <span class="err">=</span> <span class="err">00:16:3e</span> <span class="err">or</span>
                     <span class="err">substring</span> <span class="err">(hardware,</span> <span class="err">1,</span> <span class="err">3)</span> <span class="err">=</span> <span class="err">00:16:36</span><span class="c">;
</span>        <span class="err">}</span>

        <span class="err">class</span> <span class="err">"microsoft-clients"</span> <span class="err">{</span>
                <span class="err">match</span> <span class="err">if</span> <span class="err">substring(option</span> <span class="err">vendor-class-identifier,0,4)</span> <span class="err">=</span> <span class="err">"MSFT"</span><span class="c">;
</span>        <span class="err">}</span>

        <span class="err">class</span> <span class="err">"pxeclients"</span> <span class="err">{</span>
                <span class="err">match</span> <span class="err">if</span> <span class="err">substring(option</span> <span class="err">vendor-class-identifier,</span> <span class="err">0,</span> <span class="err">9)</span> <span class="err">=</span> <span class="err">"PXEClient"</span><span class="c">;
</span>
                <span class="err">next-server</span> <span class="err">172.16.100.100</span><span class="c">;
</span>                <span class="err">option</span> <span class="err">tftp-server-name</span> <span class="err">"172.16.100.100"</span><span class="c">;
</span>                <span class="err">if</span> <span class="err">option</span> <span class="py">architecture-type</span> <span class="p">=</span> <span class="s">00:07 {</span>
                        <span class="c"># UEFI SYSTEMS
</span>                        <span class="err">filename</span> <span class="err">"BOOTX64.EFI"</span><span class="c">;
</span>                <span class="err">}</span> <span class="err">else</span> <span class="err">{</span>
                        <span class="c"># EVERYBODY ELSE (BIOS)
</span>                        <span class="err">filename</span> <span class="err">"pxelinux.0"</span><span class="c">;
</span>                <span class="err">}</span>
        <span class="err">}</span>


        <span class="err">option</span> <span class="err">routers</span> <span class="err">172.16.100.1</span><span class="c">;
</span>        <span class="err">option</span> <span class="err">subnet-mask</span> <span class="err">255.255.255.0</span><span class="c">;
</span>        <span class="err">option</span> <span class="err">domain-name-servers</span> <span class="err">172.16.100.100</span><span class="c">;
</span>        <span class="err">default-lease-time</span> <span class="err">21600</span><span class="c">;
</span>        <span class="err">max-lease-time</span> <span class="err">86400</span><span class="c">;
</span>
        <span class="c"># Assign IPs 201-220 to PXE clients
</span>        <span class="err">pool</span> <span class="err">{</span>
                <span class="err">deny</span> <span class="err">members</span> <span class="err">of</span> <span class="err">"virtual"</span><span class="c">;
</span>                <span class="err">allow</span> <span class="err">members</span> <span class="err">of</span> <span class="err">"pxeclients"</span><span class="c">;
</span>                <span class="err">default-lease-time</span> <span class="err">120</span><span class="c">;
</span>                <span class="err">max-lease-time</span> <span class="err">180</span><span class="c">;
</span>                <span class="err">range</span> <span class="err">172.16.100.201</span> <span class="err">172.16.100.220</span><span class="c">;
</span>        <span class="err">}</span>
        <span class="err">pool</span> <span class="err">{</span>
                <span class="err">deny</span> <span class="err">members</span> <span class="err">of</span> <span class="err">"virtual"</span><span class="c">;
</span>                <span class="err">default-lease-time</span> <span class="err">120</span><span class="c">;
</span>                <span class="err">max-lease-time</span> <span class="err">180</span><span class="c">;
</span>                <span class="err">range</span> <span class="err">172.16.100.101</span> <span class="err">172.16.100.200</span><span class="c">;
</span>        <span class="err">}</span>

<span class="err">}</span>
</code></pre></div></div>

<ul>
  <li>启动 <code class="language-plaintext highlighter-rouge">dhcpd</code> 服务并开机运行</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>dhcpd <span class="nt">--now</span>

<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>systemctl status dhcpd
● dhcpd.service - DHCPv4 Server Daemon
     Loaded: loaded <span class="o">(</span>/usr/lib/systemd/system/dhcpd.service<span class="p">;</span> enabled<span class="p">;</span> vendor preset: disabled<span class="o">)</span>
     Active: active <span class="o">(</span>running<span class="o">)</span> since Tue 2023-02-14 00:39:35 CST<span class="p">;</span> 5s ago
       Docs: man:dhcpd<span class="o">(</span>8<span class="o">)</span>
             man:dhcpd.conf<span class="o">(</span>5<span class="o">)</span>
   Main PID: 28022 <span class="o">(</span>dhcpd<span class="o">)</span>
     Status: <span class="s2">"Dispatching packets..."</span>
      Tasks: 1 <span class="o">(</span>limit: 24580<span class="o">)</span>
     Memory: 5.2M
        CPU: 11ms
     CGroup: /system.slice/dhcpd.service
             └─28022 /usr/sbin/dhcpd <span class="nt">-f</span> <span class="nt">-cf</span> /etc/dhcp/dhcpd.conf <span class="nt">-user</span> dhcpd <span class="nt">-group</span> dhcpd <span class="nt">--no-pid</span>

Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Database file: /var/lib/dhcpd/dhcpd.leases
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: PID file: /var/run/dhcpd.pid
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Source compiled to use binary-leases
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Wrote 0 class decls to leases file.
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Wrote 0 leases to leases file.
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Listening on LPF/ens160/00:0c:29:12:6a:60/172.16.100.0/24
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Sending on   LPF/ens160/00:0c:29:12:6a:60/172.16.100.0/24
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Sending on   Socket/fallback/fallback-net
Feb 14 00:39:35 hub.xwanli0923.github.io dhcpd[28022]: Server starting service.
Feb 14 00:39:35 hub.xwanli0923.github.io systemd[1]: Started DHCPv4 Server Daemon.
</code></pre></div></div>

<ul>
  <li>添加 <code class="language-plaintext highlighter-rouge">dhcp</code> 服务通过防火墙规则</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--add-service</span><span class="o">=</span>dhcp 
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--runtime-to-permanent</span>
</code></pre></div></div>

<h3 id="3-准备-tftp-服务器">3. 准备 TFTP 服务器</h3>

<ul>
  <li>安装 TFTP 服务器</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf <span class="nb">install </span>tftp-server
</code></pre></div></div>

<ul>
  <li>启动 <code class="language-plaintext highlighter-rouge">tftp</code> 服务器并允许开机自动运行</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>tftp.socket <span class="nt">--now</span>
</code></pre></div></div>

<ul>
  <li>添加 <code class="language-plaintext highlighter-rouge">tftp</code> 服务通过防护墙规则</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--add-service</span><span class="o">=</span>tftp
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>firewall-cmd <span class="nt">--runtime-to-permanent</span>
</code></pre></div></div>

<h3 id="4-准备自动应答文件kickstart">4. 准备自动应答文件kickstart</h3>

<ul>
  <li>
    <p>kickstart 文件生成可以使用当前系统 <code class="language-plaintext highlighter-rouge">/root/anaconda-ks.cfg</code> 进行修改，或者使用红帽的 <a href="https://access.redhat.com/labs/kickstartconfig/">Kickstart Generator</a> 生成</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">kickstart</code>自动应答文件语法可参考：
    <ul>
      <li><a href="https://pykickstart.readthedocs.io/en/latest/kickstart-docs.html#what-are-kickstart-installations">https://pykickstart.readthedocs.io/en/latest/kickstart-docs.html#what-are-kickstart-installations</a></li>
    </ul>
  </li>
  <li>
    <p>本示例采用参考文档以及原有文件修改生成</p>
  </li>
  <li>文件位置 <code class="language-plaintext highlighter-rouge">/content/almalinux/ks/install.ks</code></li>
</ul>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">lang</span> <span class="err">en_US</span>
<span class="err">keyboard</span> <span class="py">--xlayouts</span><span class="p">=</span><span class="s">'us'</span>
<span class="err">timezone</span> <span class="err">Asia/Shanghai</span> <span class="err">--utc</span>
<span class="err">repo</span> <span class="py">--name</span><span class="p">=</span><span class="s">"AppStream"</span> <span class="s">--baseurl=http://172.16.100.100/content/almalinux/dvd/AppStream</span>
<span class="err">%addon</span> <span class="err">com_redhat_dump</span> <span class="err">--disable</span>
<span class="err">%end</span>
<span class="err">network</span>  <span class="py">--bootproto</span><span class="p">=</span><span class="s">dhcp --device=link --activate</span>
<span class="err">rootpw</span> <span class="err">$2b$10$8yIFVJWpMRASzobheELgT.BZFZQ/Ubu1IysRiYWu95BqEI/4zCYsW</span> <span class="err">--iscrypted</span>
<span class="c"># The xwanli's password is `cloudshell`
</span><span class="err">user</span> <span class="py">--groups</span><span class="p">=</span><span class="s">wheel --name=xwanli --password=$6$XZTVGyVbdYxk9wh6$uDcnyVxqJjig90bc7.ti7S5PVTDFk7G3xyix/JT0/9p4KVnUN7EU8VJR5hOjAGcoztca3d4aydvYyTcYDE0Zy1 --iscrypted --gecos="xwanli"</span>
<span class="err">reboot</span>
<span class="err">text</span>
<span class="err">url</span> <span class="py">--url</span><span class="p">=</span><span class="s">http://172.16.100.100/content/almalinux/dvd/BaseOS</span>
<span class="err">bootloader</span> <span class="py">--append</span><span class="p">=</span><span class="s">"rhgb quiet"</span>
<span class="err">zerombr</span>
<span class="err">clearpart</span> <span class="err">--all</span> <span class="err">--initlabel</span>
<span class="err">part</span> <span class="err">pv.0</span> <span class="py">--fstype</span><span class="p">=</span><span class="s">"lvmpv"</span> <span class="s">--ondisk=sda --size=10240 --grow</span>
<span class="err">part</span> <span class="err">/boot</span> <span class="py">--fstype</span><span class="p">=</span><span class="s">"xfs"</span> <span class="s">--ondisk=sda --size=2048 </span>
<span class="err">volgroup</span> <span class="err">cloudshelledu</span> <span class="py">--pesize</span><span class="p">=</span><span class="s">4096 pv.0</span>
<span class="err">logvol</span> <span class="err">/</span> <span class="py">--fstype</span><span class="p">=</span><span class="s">"xfs"</span> <span class="s">--size=10240 --grow  --name=root --vgname=cloudshelledu</span>
<span class="err">part</span> <span class="err">/boot/efi</span> <span class="py">--fstype</span><span class="p">=</span><span class="s">efi --size=600 --fsoptions="umask=0077,shortname=winnt"</span>

<span class="err">firstboot</span> <span class="err">--disable</span>
<span class="err">auth</span> <span class="err">--enableshadow</span> <span class="py">--passalgo</span><span class="p">=</span><span class="s">sha512</span>
<span class="err">selinux</span> <span class="err">--permissive</span>
<span class="err">firewall</span> <span class="err">--enabled</span> <span class="err">--ssh</span>
<span class="err">skipx</span>
<span class="err">%post</span>
<span class="err">cat</span> <span class="err">&gt;</span> <span class="err">/etc/yum.repos.d/almalinux_dvd.repo</span> <span class="err">&lt;&lt;-EOF</span>
<span class="nn">[almalinux-9.1-for-x86_64-BaseOS-rpms]</span>
<span class="py">name</span> <span class="p">=</span> <span class="s">AlmaLinux DVD BaseOS Local Repository</span>
<span class="py">enabled</span> <span class="p">=</span> <span class="s">true</span>
<span class="py">baseurl</span> <span class="p">=</span> <span class="s">http://172.16.100.100/content/almalinux/dvd/BaseOS</span>
<span class="py">gpgcheck</span> <span class="p">=</span> <span class="s">false</span>

<span class="nn">[almalinux-9.1-for-x86_64-AppStream-rpms]</span>
<span class="py">name</span> <span class="p">=</span> <span class="s">AlmaLinux DVD AppStream Local Repository</span>
<span class="py">enabled</span> <span class="p">=</span> <span class="s">true</span>
<span class="py">baseurl</span> <span class="p">=</span> <span class="s">http://172.16.100.100/content/almalinux/dvd/AppStream</span>
<span class="py">gpgcheck</span> <span class="p">=</span> <span class="s">false</span>
<span class="err">EOF</span>
<span class="err">dnf</span> <span class="err">group</span> <span class="err">install</span> <span class="err">-y</span> <span class="err">"Server</span> <span class="err">with</span> <span class="err">GUI"</span>
<span class="err">dnf</span> <span class="err">remove</span> <span class="err">-y</span> <span class="err">gnome-initial-setup</span>
<span class="err">systemctl</span> <span class="err">set-default</span> <span class="err">graphical.target</span>
<span class="err">%end</span>

<span class="err">%packages</span>
<span class="err">@^graphical-server-environment</span>
<span class="err">@guest-agents</span>

<span class="err">%end</span>

</code></pre></div></div>

<h3 id="5-向-tftp中添加所需文件">5. 向 <code class="language-plaintext highlighter-rouge">TFTP</code>中添加所需文件</h3>

<ul>
  <li>安装 <code class="language-plaintext highlighter-rouge">TFTP Booting</code> 文件,并拷贝 <code class="language-plaintext highlighter-rouge">pxelinux.0</code>文件至 <code class="language-plaintext highlighter-rouge">/var/lib/tftpboot</code></li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>dnf instal <span class="nt">-y</span> syslinux-tftpboot
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo cp</span> /tftpboot/pxelinux.0 /var/lib/tftpboot/
</code></pre></div></div>

<ul>
  <li>将光盘中所需文件拷贝至<code class="language-plaintext highlighter-rouge">/var/lib.tftpboot</code></li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo cp</span> <span class="nt">-r</span> /content/almalinux/dvd/EFI/BOOT/<span class="k">*</span>  /var/lib/tftpboot/
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo cp</span> <span class="nt">-r</span> /content/almalinux/dvd/images /var/lib/tftpboot/
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo cp</span> <span class="nt">-r</span> /content/almalinux/dvd/isolinux/<span class="k">*</span>  /var/lib/tftpboot/
</code></pre></div></div>

<ul>
  <li>修改 <code class="language-plaintext highlighter-rouge">EFI</code> 引导时所需的配置文件</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo </span>vim /var/lib/tftpboot/grub.cfg 
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo chmod </span>644 /var/lib/tftpboot/grub.cfg 
</code></pre></div></div>

<ul>
  <li>修改内容如下：</li>
</ul>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">set</span> <span class="py">default</span><span class="p">=</span><span class="s">"1"</span>

<span class="err">function</span> <span class="err">load_video</span> <span class="err">{</span>
  <span class="err">insmod</span> <span class="err">efi_gop</span>
  <span class="err">insmod</span> <span class="err">efi_uga</span>
  <span class="err">insmod</span> <span class="err">video_bochs</span>
  <span class="err">insmod</span> <span class="err">video_cirrus</span>
  <span class="err">insmod</span> <span class="err">all_video</span>
<span class="err">}</span>

<span class="err">load_video</span>
<span class="err">set</span> <span class="py">gfxpayload</span><span class="p">=</span><span class="s">keep</span>
<span class="err">insmod</span> <span class="err">gzio</span>
<span class="err">insmod</span> <span class="err">part_gpt</span>
<span class="err">insmod</span> <span class="err">ext2</span>

<span class="err">set</span> <span class="py">timeout</span><span class="p">=</span><span class="s">60</span>
<span class="c">### END /etc/grub.d/00_header ###
</span>
<span class="err">search</span> <span class="err">--no-floppy</span> <span class="py">--set</span><span class="p">=</span><span class="s">root -l 'AlmaLinux-9-1-x86_64-dvd'</span>

<span class="c">### BEGIN /etc/grub.d/10_linux ###
</span><span class="err">menuentry</span> <span class="err">'Install</span> <span class="err">AlmaLinux</span> <span class="err">9.1</span> <span class="err">UEFI</span> <span class="err">from</span> <span class="err">hub.xwanli0923.github.io'</span> <span class="err">--class</span> <span class="err">fedora</span> <span class="err">--class</span> <span class="err">gnu-linux</span> <span class="err">--class</span> <span class="err">gnu</span> <span class="err">--class</span> <span class="err">os</span> <span class="err">{</span>
        <span class="err">linuxefi</span> <span class="err">/images/pxeboot/vmlinuz</span> <span class="py">inst.repo</span><span class="p">=</span><span class="s">http://172.16.100.100/content/almalinux/dvd/ inst.ks=http://172.16.100.100/content/almalinux/ks/install.ks quiet</span>
        <span class="err">initrdefi</span> <span class="err">/images/pxeboot/initrd.img</span>
<span class="err">}</span>
</code></pre></div></div>

<ul>
  <li>创建 <code class="language-plaintext highlighter-rouge">Legacy</code> 引导所需文件</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo mkdir</span> /var/lib/tftpboot/pxelinux.cfg
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo mv</span> /var/lib/tftpboot/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default
<span class="o">[</span>xwanli@hub.xwanli0923.github.io ~]<span class="nv">$ </span><span class="nb">sudo chmod </span>644 /var/lib/tftpboot/pxelinux.cfg/default
</code></pre></div></div>

<ul>
  <li>修改内容如下：</li>
</ul>

<div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">default</span> <span class="err">vesamenu.c32</span>
<span class="err">timeout</span> <span class="err">600</span>

<span class="err">display</span> <span class="err">boot.msg</span>
<span class="err">...ommit...</span>

<span class="err">menu</span> <span class="err">tabmsg</span> <span class="err">Press</span> <span class="err">Tab</span> <span class="err">for</span> <span class="err">full</span> <span class="err">configuration</span> <span class="err">options</span> <span class="err">on</span> <span class="err">menu</span> <span class="err">items.</span>

<span class="err">menu</span> <span class="err">separator</span> <span class="c"># insert an empty line
</span><span class="err">menu</span> <span class="err">separator</span> <span class="c"># insert an empty line
</span>
<span class="err">label</span> <span class="err">linux</span>
  <span class="err">menu</span> <span class="err">label</span> <span class="err">^Install</span> <span class="err">AlmaLinux</span> <span class="err">9.1</span> <span class="err">Legacy</span> <span class="err">from</span> <span class="err">hub.xwanli0923.github.io</span>
  <span class="err">kernel</span> <span class="err">vmlinuz</span>
  <span class="err">append</span> <span class="py">initrd</span><span class="p">=</span><span class="s">initrd.img inst.repo=http://172.16.100.100/content/almalinux/dvd/ inst.ks=http://172.16.100.100/content/almalinux/ks/install.ks quiet</span>


<span class="err">label</span> <span class="err">local</span>
  <span class="err">menu</span> <span class="err">label</span> <span class="err">Boot</span> <span class="err">from</span> <span class="err">^local</span> <span class="err">drive</span>
  <span class="err">localboot</span> <span class="err">0xffff</span>

<span class="err">menu</span> <span class="err">separator</span> <span class="c"># insert an empty line
</span>

<span class="err">menu</span> <span class="err">end</span>
</code></pre></div></div>

<h3 id="6-测试部署">6. 测试部署</h3>

<ul>
  <li>使用 <code class="language-plaintext highlighter-rouge">UEFI</code> 引导</li>
</ul>

<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-13_17-41-42.png" alt="" /></p>

<hr />

<p><img src="/assets/images/2023-02-13/pxe-with-uefi-2023-02-14-10-47-38.png" alt="" /></p>

<ul>
  <li>开机后使用创建的账户<code class="language-plaintext highlighter-rouge">xwanli</code>登录</li>
</ul>

<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-14_11-47-59.png" alt="" /></p>

<hr />

<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-14_11-50-24.png" alt="" /></p>

<ul>
  <li>登录成功</li>
</ul>

<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-14_11-51-09.png" alt="" /></p>

<hr />
<p><img src="/assets/images/2023-02-13/Snipaste_2023-02-14_11-53-17.png" alt="" /></p>

<h3 id="7-结语">7. 结语</h3>

<p>本文主要以UEFI引导的配置为主，如果需要部署<code class="language-plaintext highlighter-rouge">Legacy MBR</code>的引导模式，需要您对<code class="language-plaintext highlighter-rouge">kickstart</code>文件进行调整；或者编写 <code class="language-plaintext highlighter-rouge">%pre ... %end</code>部分，判断系统引导模式，从而自动判断使用<code class="language-plaintext highlighter-rouge">EUFI</code>或<code class="language-plaintext highlighter-rouge">Legacy MBR</code> 。</p>

<hr />
<p>参考文档：</p>

<ul>
  <li>PXELINUX Wiki: <a href="https://wiki.syslinux.org/wiki/index.php?title=PXELINUX#:~:text=DHCP%20options%20Option%20208%20pxelinux.magic%20Earlier%20versions%20of,able%20to%20recognize%20any%20special%20DHCP%20options%20whatsoever.">https://wiki.syslinux.org/wiki/index.php?title=PXELINUX</a></li>
  <li>RFC 2132: <a href="https://tools.ietf.org/html/rfc2132">DHCP Options and BOOTP Vendor Extensions</a></li>
  <li>RFC 4578: <a href="https://tools.ietf.org/html/rfc4578">DHCP Options for PXE</a></li>
  <li>RFC 5071: <a href="https://tools.ietf.org/html/rfc5071">DHCP Options used by PXELINUX</a></li>
</ul>]]></content><author><name>邢万里</name></author><category term="linux" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">在红帽企业版Linux9中如何重置ROOT密码</title><link href="http://localhost:4000/2022/12/25/reset-root-password.html" rel="alternate" type="text/html" title="在红帽企业版Linux9中如何重置ROOT密码" /><published>2022-12-25T00:00:00+08:00</published><updated>2022-12-25T00:00:00+08:00</updated><id>http://localhost:4000/2022/12/25/reset-root-password</id><content type="html" xml:base="http://localhost:4000/2022/12/25/reset-root-password.html"><![CDATA[<p><img src="/assets/images/2022-12-25/rhel9-backlit-lines.jpg" alt="rhel9" /></p>

<p><em>[图片来源：RHEL9 内置壁纸]</em></p>

<p><em>作者：邢万里</em></p>

<h2 id="文档说明">文档说明：</h2>

<p>本文叙述了如何在没有对应版本的系统LiveCD进入救援模式下重置 <strong>root</strong> 账户密码的使用场景。</p>

<blockquote>
  <p>系统版本: Red Hat Enterprise Linux 9.0</p>

  <p>Kernel: 5.14.0-70.13.1.el9_0.x86_64</p>
</blockquote>

<h2 id="重置-root-密码">重置 ROOT 密码</h2>

<ol>
  <li>
    <p>在计算机的本地控制台，发送 <strong>Ctrl+Alt+Del</strong> 组合键来重启系统。</p>
  </li>
  <li>
    <p>当我们看到系统引导菜单界面，按下任意按键（不包括<strong>Enter</strong>)中止倒计时。</p>
  </li>
  <li>
    <p>使用方向按键移动光标到当前内核版本对应的 rescue 条目:
<img src="/assets/images/2022-12-25/select-kernel-item.png" alt="select-kernel-item" /></p>

    <p>根据屏幕下方的提示，按下 <strong>e</strong> 编辑选择的条目；如果在编辑页面发生改变后，想要恢复默认内容，按下<strong>Esc</strong>回退到当前页面菜单，重新进入即可。</p>
  </li>
  <li>
    <p>进入到编辑页面后，使用方向键移动光标，找到 <strong>linux</strong> 开头的一行，按下 <strong>Ctrl+e</strong> 或者 <strong>End</strong> 键，来到行尾，输入 <strong>rd.break</strong> ；这可以使系统从 <strong>initramfs</strong> 向实际系统移交控制权前中断前进。
<img src="/assets/images/2022-12-25/kernel-command-line.png" alt="kernel-command-line" />
  按下 <strong>Ctrl+x</strong> 使用当前更改进行启动</p>
  </li>
  <li>
    <p>启动之后，系统会进入 <strong>emergency mode</strong>, 并提示按下 <strong>Enter</strong> 进入维护,按下 <strong>Enter</strong> 按键：
<img src="/assets/images/2022-12-25/chroot-jail.png" alt="chroot-jail" /></p>
  </li>
  <li>在当前的 <strong>shell (switch_root)</strong> 环境中，磁盘上的系统根目录会以只读的方式挂载在 <strong>/sysroot</strong> 。我们在修改密码时需要更新 <strong>/etc/shadow</strong> 文件，因此我们需要将 <strong>sysroot</strong> 目录重新以读写权限进行挂载：
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mount <span class="nt">-o</span> remount,rw /sysroot
</code></pre></div>    </div>
  </li>
  <li>使用 <strong>chroot</strong> 命令切换系统根目录到 <strong>/sysroot</strong> ，<strong>/sysroot</strong> 是我们系统真实的根目录：
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">chroot</span> /sysroot
</code></pre></div>    </div>
  </li>
  <li>切换成功后 ，设置新的密码:
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>passwd root
</code></pre></div>    </div>
  </li>
  <li>检查系统是否开启了 <strong>SELinux</strong>，如果开启，上述更改会导致系统在下次启动失败，需要创建 <strong>/.autorelabel</strong> 文件，通知系统在下次启动时，确保所有未标记文件能够重新获得 <strong>SELinux</strong> 安全上下文标签:
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">grep</span> ^SELINUX<span class="o">=</span> /etc/selinux/config
<span class="nv">SELINUX</span><span class="o">=</span>enforcing
<span class="nv">$ </span><span class="nb">touch</span> /.autorelabel
</code></pre></div>    </div>
  </li>
  <li>
    <p>输入 <strong>exit</strong> 命令退出当前 <strong>chroot</strong> 环境 ,并再次输入 <strong>exit</strong> 命令退出 <strong>initramfs</strong> 调试 <strong>shell</strong> 。</p>
  </li>
  <li>系统将自动重启两次，第二次可以看到 <strong>login</strong> 登录提示，输入 <strong>root</strong> 账户和对应新密码登录系统。</li>
</ol>]]></content><author><name>邢万里</name></author><category term="linux" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">开始部署 CEPH 集群</title><link href="http://localhost:4000/2022/12/21/deploying-ceph-cluster.html" rel="alternate" type="text/html" title="开始部署 CEPH 集群" /><published>2022-12-21T00:00:00+08:00</published><updated>2022-12-21T00:00:00+08:00</updated><id>http://localhost:4000/2022/12/21/deploying-ceph-cluster</id><content type="html" xml:base="http://localhost:4000/2022/12/21/deploying-ceph-cluster.html"><![CDATA[<p><img src="/assets/images/2022-12-21/photo-jelly-fish-01.jpg" alt="Ceph" />
<em>[图片来源 ceph.io]</em></p>

<p><em>作者：邢万里</em></p>

<h2 id="文档说明">文档说明</h2>

<ul>
  <li>系统版本：CentOS-Stream-8-x86_64-20221125</li>
  <li>内核版本：4.18.0-408</li>
  <li>podman 版本:4.2.0</li>
  <li>ceph 版本： Quincy</li>
  <li>客户端配置：
    <ul>
      <li><strong>ceph-clienta</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
          <li>Storage: 10GiBx5</li>
        </ul>
      </li>
      <li><strong>ceph-clientb</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>集群节点配置：
    <ul>
      <li><strong>ceph-serverc</strong>、<strong>ceph-serverd</strong>和<strong>ceph-servere</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
          <li>Storage: 10GiBx5</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="查找合适的镜像">查找合适的镜像</h2>

<ol>
  <li>以 <strong>admin</strong> 身份登录 <strong>ceph-serverc</strong>, 使用 <strong>cephadm</strong> 验证当前的版本
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo</span> <span class="nt">-i</span>
<span class="nv">$ </span>cephadm version
Using ceph image with <span class="nb">id</span> <span class="s1">'cc65afd6173a'</span> and tag <span class="s1">'v17'</span> created on 2022-10-17 23:41:41 +0000 UTC
quay.io/ceph/ceph@sha256:0560b16bec6e84345f29fb6693cd2430884e6efff16a95d5bdd0bb06d7661c45
ceph version 17.2.5 <span class="o">(</span>98318ae89f1a893a6ded3a640405cdbb33e08757<span class="o">)</span> quincy <span class="o">(</span>stable<span class="o">)</span>
</code></pre></div>    </div>
  </li>
  <li>我们可以在 <a href="https://quay.io/repository/ceph/ceph">quay.io</a> 和 <a href="https://hub.docker.com/r/ceph/ceph">docker.io</a>获得 <strong>ceph</strong> 相关的可用镜像，但是 <strong>docker hub</strong> 上的镜像更新速度有可能比 <strong>quay.io</strong> 的慢，我们这里选择使用 <strong>quay.io</strong> 的镜像文件:
    <ul>
      <li>安装 <strong>jq</strong> 工具
        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>dnf <span class="nb">install </span>jq 
</code></pre></div>        </div>
      </li>
      <li>查找镜像仓库中可用的镜像版本
        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="nt">-ddds</span> <span class="nt">-L</span> https://quay.io/api/v1/repository/ceph/ceph/tag?page_size<span class="o">=</span>100 | jq <span class="s1">'."tags"[] .name'</span> | <span class="nb">grep</span> <span class="s1">'17.*'</span>
<span class="s2">"v17.2"</span>
<span class="s2">"v17"</span>
<span class="s2">"v17.2.5"</span>
....ommit....
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ol>

<h2 id="准备进行部署">准备进行部署</h2>

<ol>
  <li>创建一个 <strong>JSON</strong> 文件保护敏感信息,例如为 <strong>auth.json</strong>
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>mdkir /root/ceph-cluster
<span class="nv">$ </span><span class="nb">cd</span> /root/ceph-cluster
<span class="nv">$ </span><span class="nb">cat </span>auth.json
<span class="o">{</span>
<span class="s2">"url"</span>:<span class="s2">"quay.io"</span>,
<span class="s2">"username"</span>:<span class="s2">"YOUR QUAY ACCOUNT"</span>,
<span class="s2">"password"</span>:<span class="s2">"YOUR QUAY ACCOUNT PASSWORD"</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>运行 <strong>cephadm bootstrap</strong> 命令创建一个ceph集群
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># man cephadm  | grep -A 29 'cephadm bootstrap'</span>
<span class="nv">$ </span>cephadm bootstrap <span class="nt">--cluster-network</span> 172.16.90.0/24 <span class="se">\</span>
<span class="nt">--mon-ip</span> 172.16.80.104 <span class="se">\</span>
<span class="nt">--initial-dashboard-password</span> YOUR_PASSWORD <span class="se">\</span>
<span class="nt">--dashboard-password-noupdate</span> <span class="se">\</span>
<span class="nt">--allow-fqdn-hostname</span> <span class="se">\</span>
<span class="nt">--registry-json</span> auth.json
   
   
Ceph Dashboard is now available at:
   
             URL: https://ceph-serverc.lab.example.net:8443/
            User: admin
        Password: YOUR_PASSWORD
   
Enabling client.admin keyring and conf on hosts with <span class="s2">"admin"</span> label
Saving cluster configuration to /var/lib/ceph/5851a2e4-80f0-11ed-9d85-000c291c7df8/config directory
Enabling autotune <span class="k">for </span>osd_memory_target
You can access the Ceph CLI as following <span class="k">in case</span> of multi-cluster or non-default config:
   
        <span class="nb">sudo</span> /usr/sbin/cephadm shell <span class="nt">--fsid</span> 5851a2e4-80f0-11ed-9d85-000c291c7df8 <span class="nt">-c</span> /etc/ceph/ceph.conf <span class="nt">-k</span> /etc/ceph/ceph.client.admin.keyring
   
Or, <span class="k">if </span>you are only running a single cluster on this host:
   
        <span class="nb">sudo</span> /usr/sbin/cephadm shell
   
Please consider enabling telemetry to <span class="nb">help </span>improve Ceph:
   
        ceph telemetry on
   
For more information see:
   
        https://docs.ceph.com/docs/master/mgr/telemetry/
   
Bootstrap complete.
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="验证结果">验证结果</h2>

<ol>
  <li>验证集群状态
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>cephadm shell <span class="nt">--</span> ceph <span class="nt">-s</span>
Inferring fsid 5851a2e4-80f0-11ed-9d85-000c291c7df8
Inferring config /var/lib/ceph/5851a2e4-80f0-11ed-9d85-000c291c7df8/mon.ceph-serverc.lab.example.net/config
Using ceph image with <span class="nb">id</span> <span class="s1">'cc65afd6173a'</span> and tag <span class="s1">'v17'</span> created on 2022-10-17 23:41:41 +0000 UTC
quay.io/ceph/ceph@sha256:0560b16bec6e84345f29fb6693cd2430884e6efff16a95d5bdd0bb06d7661c45
  cluster:
    <span class="nb">id</span>:     5851a2e4-80f0-11ed-9d85-000c291c7df8
    health: HEALTH_WARN
            OSD count 0 &lt; osd_pool_default_size 3
   
  services:
    mon: 1 daemons, quorum ceph-serverc.lab.example.net <span class="o">(</span>age 3m<span class="o">)</span>
    mgr: ceph-serverc.lab.example.net.erqjrd<span class="o">(</span>active, since 2m<span class="o">)</span>
    osd: 0 osds: 0 up, 0 <span class="k">in
   
  </span>data:
    pools:   0 pools, 0 pgs
    objects: 0 objects, 0 B
    usage:   0 B used, 0 B / 0 B avail
    pgs:
</code></pre></div>    </div>
  </li>
  <li>访问其<code class="language-plaintext highlighter-rouge">dashboard</code>
    <ul>
      <li>
        <p>在浏览器输入 <em>https://ceph-serverc.lab.example.net:8443</em> 或 <em>https://172.16.80.104:8443</em>，弹出的证书警告同意即可
<img src="/assets/images/2022-12-21/ceph-dashboard.png" alt="ceph dashboard" /></p>
      </li>
      <li>
        <p>输入账户<code class="language-plaintext highlighter-rouge">admin</code>和设置的密码，将会看到概览界面
<img src="/assets/images/2022-12-21/ceph-dashboard-initial.png" alt="ceph dashboard expand cluster" />
<img src="/assets/images/2022-12-21/ceph-dashboard-overview.png" alt="ceph dashboard expand cluster" /></p>
      </li>
    </ul>
  </li>
</ol>

<h2 id="增加主机和设备">增加主机和设备</h2>

<ol>
  <li>安装集群公共SSH公钥
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ceph cephadm get-pub-key <span class="o">&gt;</span> /root/ceph-cluster/ceph-cluster.pub
<span class="nv">$ </span> <span class="k">for </span>HOSTS <span class="k">in </span>ceph-<span class="o">{</span>clienta,clientb,serverc,serverd,servere<span class="o">}</span><span class="p">;</span> <span class="se">\</span>
    <span class="k">do </span>ssh-copy-id <span class="nt">-f</span> <span class="nt">-i</span> /root/ceph-cluster/ceph-cluster.pub root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span><span class="p">;</span> <span class="se">\</span>
    <span class="k">done</span>
</code></pre></div>    </div>
  </li>
  <li>添加新的主机到集群
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ceph orch host add ceph-clienta.lab.example.net
Added host <span class="s1">'ceph-clienta.lab.example.net'</span> with addr <span class="s1">'172.16.80.102'</span>
   
<span class="nv">$ </span>ceph orch host add ceph-serverc.lab.example.net
Added host <span class="s1">'ceph-serverc.lab.example.net'</span> with addr <span class="s1">'172.16.80.104'</span>
   
<span class="nv">$ </span>ceph orch host add ceph-serverd.lab.example.net
Added host <span class="s1">'ceph-serverd.lab.example.net'</span> with addr <span class="s1">'172.16.80.105'</span>
   
<span class="nv">$ </span>ceph orch host add ceph-servere.lab.example.net
Added host <span class="s1">'ceph-servere.lab.example.net'</span> with addr <span class="s1">'172.16.80.106'</span>
</code></pre></div>    </div>
  </li>
  <li>增加新的 OSD
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ceph orch daemon add osd ceph-serverc.lab.example.net:/dev/sdb
Created osd<span class="o">(</span>s<span class="o">)</span> 0 on host <span class="s1">'ceph-serverc.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-serverc.lab.example.net:/dev/sdc
Created osd<span class="o">(</span>s<span class="o">)</span> 1 on host <span class="s1">'ceph-serverc.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-serverc.lab.example.net:/dev/sdd
Created osd<span class="o">(</span>s<span class="o">)</span> 2 on host <span class="s1">'ceph-serverc.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-serverd.lab.example.net:/dev/sdb
Created osd<span class="o">(</span>s<span class="o">)</span> 3 on host <span class="s1">'ceph-serverd.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-serverd.lab.example.net:/dev/sdc
Created osd<span class="o">(</span>s<span class="o">)</span> 4 on host <span class="s1">'ceph-serverd.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-serverd.lab.example.net:/dev/sdd
Created osd<span class="o">(</span>s<span class="o">)</span> 5 on host <span class="s1">'ceph-serverd.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-servere.lab.example.net:/dev/sdb
Created osd<span class="o">(</span>s<span class="o">)</span> 6 on host <span class="s1">'ceph-servere.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-servere.lab.example.net:/dev/sdc
Created osd<span class="o">(</span>s<span class="o">)</span> 7 on host <span class="s1">'ceph-servere.lab.example.net'</span>
   
<span class="nv">$ </span>ceph orch daemon add osd ceph-servere.lab.example.net:/dev/sdd
Created osd<span class="o">(</span>s<span class="o">)</span> 8 on host <span class="s1">'ceph-servere.lab.example.net'</span>
</code></pre></div>    </div>
  </li>
  <li>最终的 <strong>ceph</strong> 集群状态
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cephadm shell
Inferring fsid 5851a2e4-80f0-11ed-9d85-000c291c7df8
Inferring config /var/lib/ceph/5851a2e4-80f0-11ed-9d85-000c291c7df8/mon.ceph-serverc.lab.example.net/config
Using ceph image with <span class="nb">id</span> <span class="s1">'cc65afd6173a'</span> and tag <span class="s1">'v17'</span> created on 2022-10-17 23:41:41 +0000 UTC
quay.io/ceph/ceph@sha256:0560b16bec6e84345f29fb6693cd2430884e6efff16a95d5bdd0bb06d7661c45
<span class="o">[</span>ceph: root@ceph-serverc /]# ceph <span class="nt">-s</span>
  cluster:
    <span class="nb">id</span>:     5851a2e4-80f0-11ed-9d85-000c291c7df8
    health: HEALTH_OK
   
  services:
    mon: 4 daemons, quorum ceph-serverc.lab.example.net,ceph-clienta,ceph-serverd,ceph-servere <span class="o">(</span>age 6m<span class="o">)</span>
    mgr: ceph-serverc.lab.example.net.erqjrd<span class="o">(</span>active, since 25m<span class="o">)</span>, standbys: ceph-clienta.kbhjvx
    osd: 9 osds: 9 up <span class="o">(</span>since 110s<span class="o">)</span>, 9 <span class="k">in</span> <span class="o">(</span>since 2m<span class="o">)</span>
   
  data:
    pools:   1 pools, 1 pgs
    objects: 2 objects, 577 KiB
    usage:   591 MiB used, 89 GiB / 90 GiB avail
    pgs:     1 active+clean
</code></pre></div>    </div>

    <p><img src="/assets/images/2022-12-21/ceph-dashboard-new-view.png" alt="dashboard new view" /></p>
  </li>
</ol>

<hr />
<blockquote>
  <p>参考文档：<br />
ceph-container: <a href="https://github.com/ceph/ceph-container/blob/main/README.md">https://github.com/ceph/ceph-container</a> <br />
Ceph Document: <a href="https://docs.ceph.com/en/latest/cephadm/host-management/#cephadm-adding-hosts">cephadm-adding-hosts</a></p>
</blockquote>]]></content><author><name>邢万里</name></author><category term="ceph" /><summary type="html"><![CDATA[[图片来源 ceph.io]]]></summary></entry><entry><title type="html">部署CEPH集群前的准备工作</title><link href="http://localhost:4000/2022/12/19/preparing-for-ceph-cluster-deployment.html" rel="alternate" type="text/html" title="部署CEPH集群前的准备工作" /><published>2022-12-19T00:00:00+08:00</published><updated>2022-12-19T00:00:00+08:00</updated><id>http://localhost:4000/2022/12/19/preparing-for-ceph-cluster-deployment</id><content type="html" xml:base="http://localhost:4000/2022/12/19/preparing-for-ceph-cluster-deployment.html"><![CDATA[<p><img src="/assets/images/2022-12-19/photo-squid-02.jpg" alt="Ceph" />
<em>[图片来源 ceph.io]</em></p>

<p><em>作者：邢万里</em></p>

<h2 id="文档说明">文档说明</h2>

<ul>
  <li>系统版本：CentOS-Stream-8-x86_64-20221125</li>
  <li>内核版本：4.18.0-408</li>
  <li>podman 版本:4.2.0</li>
  <li>ceph 版本： Quincy</li>
  <li>其他要求： <strong>git</strong>、<strong>LVM2</strong>、<strong>python3.6.8</strong></li>
  <li>客户端配置：
    <ul>
      <li><strong>ceph-clienta</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
          <li>Storage: 10GiBx5</li>
        </ul>
      </li>
      <li><strong>ceph-clientb</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><em>ceph-clienta 充当ceph集群客户端的同时，也充当ceph的管理端</em></p>

<ul>
  <li>集群节点配置：
    <ul>
      <li><strong>ceph-serverc</strong>、<strong>ceph-serverd</strong>和<strong>ceph-servere</strong>
        <ul>
          <li>CPU: 2vCPU</li>
          <li>Memory: 4GiB</li>
          <li>Storage: 10GiBx5</li>
        </ul>
      </li>
    </ul>

    <p><em>其中 ceph-server 属于 bootstrap 节点</em></p>
  </li>
  <li>
    <p>网络信息：</p>

    <p><strong>public_network</strong>: 172.16.80.0/24</p>

    <p><strong>cluster_network</strong>: 172.16.90.0/24</p>
  </li>
</ul>

<h2 id="安装-cephadm">安装 CEPHADM</h2>

<ol>
  <li>使用 <strong>root</strong> 账户登录到 <strong>ceph-serverc</strong> 节点
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>dnf <span class="nb">install</span> <span class="nt">-y</span> centos-release-ceph-quincy
<span class="nv">$ </span>dnf <span class="nb">install</span> <span class="nt">-y</span> cephadm vim bash-completion git ansible
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="设置系统">设置系统</h2>

<ol>
  <li>在 <strong>ceph-clientc</strong> 创建 <strong>admin</strong> 账户，并设置其为免认证 <strong>SUDO</strong>
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>useradd admin
<span class="nv">$ </span>passwd admin
<span class="nv">$ </span><span class="nb">echo</span> <span class="s2">"admin ALL=(ALL) NOPASSWD:ALL"</span> <span class="o">&gt;</span> /etc/sudoers.d/admin
<span class="nv">$ </span><span class="nb">chmod </span>0400 /etc/sudoers.d/admin
</code></pre></div>    </div>
  </li>
  <li>在 <strong>ceph-clientc</strong> 上创建免密码认证的 <strong>ssh</strong> 密钥对，并复制到 <strong>admin</strong> 家目录
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ssh-keygen <span class="nt">-q</span> <span class="nt">-t</span> rsa <span class="nt">-f</span> ~/.ssh/id_rsa <span class="nt">-N</span> <span class="s1">''</span>
<span class="nv">$ </span><span class="nb">cp</span> <span class="nt">-r</span> ~/.ssh  ~admin/.ssh
<span class="nv">$ </span><span class="nb">chown</span> <span class="nt">-R</span> admin: ~admin/.ssh
<span class="nv">$ </span>ssh-copy-id root@localhost
</code></pre></div>    </div>
  </li>
  <li>根据自己的情况，编写本地主机名解析文件 <strong>/etc/hosts</strong>,追加以下内容
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>172.16.80.102 ceph-clienta.lab.example.net ceph-clienta
172.16.80.103 ceph-clientb.lab.example.net ceph-clientb
172.16.80.104 ceph-serverc.lab.example.net ceph-serverc
172.16.80.105 ceph-serverd.lab.example.net ceph-serverd
172.16.80.106 ceph-servere.lab.example.net ceph-servere
</code></pre></div>    </div>
  </li>
  <li>将上述创建的用户，文件等在其他节点同样创建
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="k">for </span>HOSTS <span class="k">in </span>ceph-<span class="o">{</span>clienta,clientb,serverc,serverd,servere<span class="o">}</span>
  <span class="k">do
   </span>scp <span class="nt">-r</span> /root/.ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:/root/.ssh
   scp  /etc/hosts root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:/etc/hosts
   ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span> <span class="s2">"useradd admin"</span>
   ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span> <span class="s2">"echo YOUR_ADMIN_PASSWORD | passwd --stdin admin"</span>
   scp /etc/sudoers.d/admin root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:/etc/sudoers.d/admin
   ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span> <span class="s2">"chmod 0400 /etc/sudoers.d/admin"</span>
   scp <span class="nt">-r</span> /root/.ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:/home/admin/.ssh
   ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span> <span class="s2">"chown -R admin: /home/admin/.ssh"</span>
  <span class="k">done</span>
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="准备-cephadm-ansible">准备 cephadm-ansible</h2>

<ol>
  <li>使用 <strong>git clone</strong> 命令下载 <strong>cephadm-ansible</strong>:
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>git clone <span class="nt">-b</span> quincy https://github.com/ceph/cephadm-ansible.git
<span class="nv">$ </span><span class="nb">cd </span>cephadm-ansible/
</code></pre></div>    </div>
  </li>
  <li>在 <strong>cephadm-adnible</strong> 下创建 <strong>hosts</strong> 清单文件:
    <div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">ceph-clienta.lab.example.net</span>
<span class="err">ceph-clientb.lab.example.net</span>
<span class="err">ceph-serverc.lab.example.net</span>
<span class="err">ceph-serverd.lab.example.net</span>
<span class="err">ceph-servere.lab.example.net</span>
   
<span class="nn">[clients]</span>
<span class="err">ceph-clienta.lab.example.net</span>
<span class="err">ceph-clientb.lab.example.net</span>
   
<span class="nn">[admin]</span>
<span class="err">ceph-clienta.lab.example.net</span>
</code></pre></div>    </div>
  </li>
  <li>测试清单中的主机，并执行 <strong>cephadm-preflight.yml</strong>
    <ul>
      <li>测试主机的连通性和用户
        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ansible <span class="nt">-i</span> hosts <span class="nt">--list-hosts</span> all
  hosts <span class="o">(</span>4<span class="o">)</span>:
     ceph-serverc.lab.example.net
     ceph-serverd.lab.example.net
     ceph-servere.lab.example.net
     ceph-clienta.lab.example.net
     ceph-clientb.lab.example.net
       
<span class="nv">$ </span>ansible <span class="nt">-i</span> hosts <span class="nt">-m</span> ping all
<span class="nv">$ </span>ansible all <span class="nt">-i</span> hosts  <span class="nt">-u</span> admin <span class="nt">-b</span> <span class="nt">-m</span> ping
</code></pre></div>        </div>
      </li>
      <li>查看 <strong>cephadm-preflight.yml</strong>
        <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Usage:</span>
<span class="c1">#</span>
<span class="c1"># ansible-playbook -i &lt;inventory host file&gt; cephadm-preflight.yml</span>
<span class="c1">#</span>
<span class="c1"># You can limit the execution to a set of hosts by using `--limit` option:</span>
<span class="c1">#</span>
<span class="c1"># ansible-playbook -i &lt;inventory host file&gt; cephadm-preflight.yml --limit &lt;my_osd_group|my_node_name&gt;</span>
<span class="c1">#</span>
<span class="c1"># You can override variables using `--extra-vars` parameter:</span>
<span class="c1">#</span>
<span class="c1"># ansible-playbook -i &lt;inventory host file&gt; cephadm-preflight.yml --extra-vars "ceph_origin=rhcs"</span>
<span class="c1">#</span>
</code></pre></div>        </div>
      </li>
      <li>使用 <strong>–extra-vars “ceph_origin=community”</strong> 执行 <strong>cephadm-preflight.yml</strong>
        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span> ansible-playbook <span class="nt">-i</span> hosts <span class="nt">--extra-vars</span> <span class="s2">"ceph_origin=community"</span> cephadm-preflight.yml
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
</ol>

<h2 id="设置默认登录账户可选">设置默认登录账户(可选)</h2>

<ol>
  <li>在 <strong>root</strong> 和 <strong>admin</strong> 的 <strong>$HOME/.ssh/config</strong> 中增加以下内容(没有则创建该文件)：
    <div class="language-ini highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">Host</span> <span class="err">*.lab.example.net</span>
  <span class="err">User</span> <span class="err">root</span>
  <span class="err">StrictHostKeyChecking</span> <span class="err">no</span>
  <span class="err">UserKnownHostsFile</span> <span class="err">/dev/null</span>
</code></pre></div>    </div>
  </li>
  <li>将上述文件分别复制到其他节点的对应用户家目录中：
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="k">for </span>HOSTS <span class="k">in </span>ceph-<span class="o">{</span>clienta,clientb,serverc,serverd,servere<span class="o">}</span>
 <span class="k">do
    </span>scp /root/.ssh/config root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:~/.ssh/config
    scp /home/admin/.ssh/config admin@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span>:~/.ssh/config
    ssh root@<span class="k">${</span><span class="nv">HOSTS</span><span class="k">}</span> <span class="s2">"systemctl disable firewalld.service --now"</span>
 <span class="k">done</span>
</code></pre></div>    </div>
  </li>
</ol>

<hr />
<blockquote>
  <p>参考文档：<br />
Ceph  Document: <a href="https://docs.ceph.com/en/latest/cephadm/install/#distribution-specific-installations">distribution-specific-installations</a> <br />
cephadm-ansible Document: <a href="https://github.com/ceph/cephadm-ansible/blob/devel/README.md">https://github.com/ceph/cephadm-ansible</a></p>
</blockquote>]]></content><author><name>邢万里</name></author><category term="ceph" /><summary type="html"><![CDATA[[图片来源 ceph.io]]]></summary></entry><entry><title type="html">如何卸载 Ansible Tower</title><link href="http://localhost:4000/2022/11/29/how-to-uninstall-ansible-tower.html" rel="alternate" type="text/html" title="如何卸载 Ansible Tower" /><published>2022-11-29T00:00:00+08:00</published><updated>2022-11-29T00:00:00+08:00</updated><id>http://localhost:4000/2022/11/29/how-to-uninstall-ansible-tower</id><content type="html" xml:base="http://localhost:4000/2022/11/29/how-to-uninstall-ansible-tower.html"><![CDATA[<p><img src="https://nwzimg.wezhan.cn/contents/sitefiles2033/10168677/images/38319670.jpg" alt="Ansible" /></p>

<p></p>

<ul>
  <li>使用 <code class="language-plaintext highlighter-rouge">ansible-tower-service stop</code> 命令停止 Ansible 相关服务，并使用 <code class="language-plaintext highlighter-rouge">ansible-tower-service status</code>  命令确保服务已经停止成功。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>ansible-tower-service stop
Stopping Tower
Redirecting to /bin/systemctl stop rh-postgresql10-postgresql.service
Redirecting to /bin/systemctl stop rabbitmq-server.service
Redirecting to /bin/systemctl stop nginx.service
Redirecting to /bin/systemctl stop supervisord.service
</code></pre></div>    </div>
  </li>
  <li>将 <code class="language-plaintext highlighter-rouge">/etc/ansible</code> 和 <code class="language-plaintext highlighter-rouge">/etc/tower</code> 目录进行归档。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">tar</span> <span class="nt">-cf</span> ansible.tar /etc/ansible
<span class="nv">$ </span><span class="nb">tar</span> <span class="nt">-cf</span> tower.tar   /etc/tower
</code></pre></div>    </div>
  </li>
  <li>另外，假设您已经使用 <code class="language-plaintext highlighter-rouge">setup.sh</code> 安装了 Ansible Tower,你可以使用以下命令进行备份 Ansible Tower。这样你可以在重新安装 Ansible Tower 后使用 <code class="language-plaintext highlighter-rouge">setup.sh -r &lt;backup file&gt;</code> 命令进行还原。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>setup.sh <span class="nt">-b</span>
</code></pre></div>    </div>
  </li>
  <li>使用 <code class="language-plaintext highlighter-rouge">yum remove</code> 命令卸载 <code class="language-plaintext highlighter-rouge">Ansible</code>，<code class="language-plaintext highlighter-rouge">RabbitMQ</code> 和 <code class="language-plaintext highlighter-rouge">Python</code>。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yum remove ansible-tower<span class="k">*</span>
<span class="nv">$ </span>yum remove rabbitmq-server
<span class="nv">$ </span>yum remove rh-python36-<span class="k">*</span>
</code></pre></div>    </div>
  </li>
  <li>删除 <code class="language-plaintext highlighter-rouge">Postgres</code> 脚本。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">rm</span> /etc/profile.d/rh-postgresql10-env.sh
</code></pre></div>    </div>
  </li>
  <li>删除以下目录。
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /etc/ansible
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /etc/tower
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /var/lib/pgsql
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /var/lib/awx
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /var/lib/rabbitmq
<span class="nv">$ </span><span class="nb">rm</span> <span class="nt">-rf</span> /var/opt/rh/rh-postgresql10/lib/pgsql/data
</code></pre></div>    </div>
  </li>
  <li>使用 <code class="language-plaintext highlighter-rouge">yum clean</code> 命令清除 <code class="language-plaintext highlighter-rouge">Ansible Tower</code> 软件仓库
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yum clean metadata <span class="nt">--enablerepo</span><span class="o">=</span><span class="s2">"ansible-tower,ansible-tower-dependencies"</span>
</code></pre></div>    </div>
  </li>
  <li>确保 <code class="language-plaintext highlighter-rouge">rpm</code> 命令没有输出
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>rpm <span class="nt">-qa</span> | <span class="nb">grep </span>ansible-tower
</code></pre></div>    </div>
    <hr />
    <blockquote>
      <p>来源：<a href="http://www.freekb.net/Article?id=212">http://www.freekb.net/Article?id=212</a> <br />
翻译： 邢万里</p>
    </blockquote>
  </li>
</ul>]]></content><author><name>邢万里</name></author><category term="ansible" /><summary type="html"><![CDATA[]]></summary></entry></feed>